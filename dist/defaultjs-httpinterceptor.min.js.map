{"version":3,"file":"defaultjs-httpinterceptor.min.js","mappings":"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","sources":["webpack://@default-js/defaultjs-httpinterceptor/webpack/bootstrap","webpack://@default-js/defaultjs-httpinterceptor/webpack/runtime/global","webpack://@default-js/defaultjs-httpinterceptor/./src/Utils.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Constants.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Manager.js","webpack://@default-js/defaultjs-httpinterceptor/./src/XMLHttpRequest.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Fetch.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Interceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/TokenInterceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/OAuthInterceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/index.js","webpack://@default-js/defaultjs-httpinterceptor/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const GLOBAL = (() => {\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\treturn {};\n})();\n\nexport {GLOBAL};\nconst Utils = {\n\tGLOBAL : GLOBAL\n};\n\nexport default Utils; ","import {GLOBAL} from \"./Utils\";\r\nexport const ORGFETCH = GLOBAL.fetch;","import { GLOBAL } from \"./Utils\";\r\nimport { ORGFETCH } from \"./Constants\";\r\nconst CURRENTORIGIN = GLOBAL.location.origin;\r\n\r\nclass Manager {\r\n\t#cache = {};\r\n\t#ignoredUrls = {};\r\n\t#ignoredOrigins = {};\r\n\t#ignoreDocumentOrigin = false;\r\n\t#interceptors = [];\r\n\t#setup = [];\r\n\t#readyCheck;\r\n\r\n\tconstructor() { }\r\n\r\n\tset ignoreDocumentOrigin(value) {\r\n\t\tthis.#ignoreDocumentOrigin = value;\r\n\t}\r\n\r\n\taddOriginToIgnore(origins) {\r\n\t\tif (origins instanceof Array)\r\n\t\t\tfor (let origin of origins)\r\n\t\t\t\tthis.#ignoredOrigins[origin.toString()] = true;\r\n\t\telse\r\n\t\t\tthis.#ignoredOrigins[origins.toString()] = true;\r\n\t}\r\n\r\n\taddUrlToIgnore(urls) {\r\n\t\tif (urls instanceof Array)\r\n\t\t\tfor (let url of urls)\r\n\t\t\t\tthis.#ignoredUrls[url.toString()] = true;\r\n\t\telse\r\n\t\t\tthis.#ignoredUrls[urls.toString()] = true;\r\n\t}\r\n\r\n\tsetup(setup) {\r\n\t\tif (typeof setup === \"function\" || setup instanceof Promise)\r\n\t\t\tthis.#setup.push(setup);\r\n\t}\r\n\r\n\taddInterceptor(aInterceptor) {\r\n\t\tif(aInterceptor instanceof Array)\r\n\t\t\treturn aInterceptor.forEach(interceptor => this.addInterceptor(interceptor));\r\n\t\tif (typeof aInterceptor !== \"object\")\r\n\t\t\tthrow new Error(\"function required an interceptor\");\r\n\t\tif (typeof aInterceptor.doAccept !== \"function\")\r\n\t\t\tthrow new Error(\"The interceptor required a \\\"doAccept\\\" function!\");\r\n\t\tif (typeof aInterceptor.doHandle !== \"function\")\r\n\t\t\tthrow new Error(\"The interceptor required a \\\"doHandle\\\" function!\");\r\n\r\n\t\tthis.#interceptors.push(aInterceptor);\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tget ready() {\r\n\t\treturn (async () => {\t\t\t\r\n\t\t\tif (this.#setup.length == 0)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tif(this.#readyCheck)\r\n\t\t\t\treturn this.#readyCheck;\r\n\r\n\t\t\tthis.#readyCheck = (async () => {\r\n\t\t\t\twhile(this.#setup.length != 0){\r\n\t\t\t\t\tconst setup = this.#setup[0];\r\n\t\t\t\t\tif (setup){\r\n\t\t\t\t\t\tconst interceptors = setup instanceof Promise ? await setup : await setup();\r\n\t\t\t\t\t\tif(interceptors)\r\n\t\t\t\t\t\t\tinterceptors instanceof Array ? interceptors.forEach(interceptor => this.addInterceptor(interceptor)) : this.addInterceptor(interceptors);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.#setup.shift();\r\n\t\t\t\t}\r\n\t\t\t\tthis.#readyCheck = null;\r\n\t\t\t\treturn this.ready;\r\n\t\t\t})();\r\n\r\n\t\t\treturn this.#readyCheck;\r\n\t\t})();\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {object} data \r\n\t * @param {(string|URL)} data.url\r\n\t * @param {(object|Request)} data.request\r\n\t * @param {object} data.metadata\r\n\t * @param {string} data.metadata.method\r\n\t * @param {string} data.metadata.origin\r\n\t * @param {string} data.metadata.protocol\r\n\t * @param {string} data.metadata.hostname\r\n\t * @param {number} data.metadata.port\r\n\t * @param {string} data.metadata.path\r\n\t * @param {string} data.metadata.hash\r\n\t * @param {URLSearchParams} data.metadata.query\r\n\t * @param {boolean} data.metadata.async\r\n\t * @returns {object} the manipulated data\r\n\t */\r\n\tasync doIntercept(data) {\r\n\t\tawait this.ready;\r\n\t\t\r\n\t\tconst origin = data.metadata.origin;\r\n\r\n\t\tif (this.#isIgnored(origin, data.url.toString()))\r\n\t\t\treturn data;\r\n\r\n\t\tconst { url, metadata } = data;\r\n\t\tconst chain = await this.#getChain(origin, { url, metadata });\r\n\t\tif (!chain)\r\n\t\t\treturn data;\r\n\r\n\t\tfor (let interceptor of chain)\r\n\t\t\tdata = await interceptor.doHandle(data);\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.#cache = {};\r\n\t}\r\n\r\n\tasync uncheckedFetch(url, request) {\r\n\t\treturn ORGFETCH(url, request);\r\n\t}\r\n\r\n\t#isIgnored(origin, url) {\r\n\t\tif (this.#ignoredUrls[url])\r\n\t\t\treturn true\r\n\t\tif (this.#ignoreDocumentOrigin && origin == CURRENTORIGIN)\r\n\t\t\treturn true;\r\n\t\tif (this.#ignoredOrigins[origin])\r\n\t\t\treturn true;\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tasync #getChain(origin, data) {\r\n\t\tlet chain = this.#cache[origin];\r\n\t\tif (!chain) {\r\n\t\t\tchain = this.#interceptorForOrigin(origin, data);\r\n\t\t\tthis.#cache[origin] = chain;\r\n\t\t}\r\n\r\n\t\treturn chain;\r\n\t}\r\n\r\n\tasync #interceptorForOrigin(origin, data) {\r\n\t\tconst result = [];\r\n\t\tfor (let interceptor of this.#interceptors) {\r\n\t\t\tif (await interceptor.doAccept(data))\r\n\t\t\t\tresult.push(interceptor)\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nconst INSTANCE = new Manager();\r\nsetTimeout(() => INSTANCE.ready, 10);\r\n\r\n\r\nexport default INSTANCE;\r\nexport {Manager};","import Manager from \"./Manager\";\r\nimport { GLOBAL } from \"./Utils\";\r\nimport \"./TypeDefs.js\";\r\n\r\n((XMLHttpRequest) => {\r\n\tclass ExtXMLHttpRequest extends XMLHttpRequest {\r\n\t\t/**\r\n\t\t * @type {InterceptorData}\r\n\t\t */\r\n\t\t#data;\r\n\r\n\t\tconstructor(options) {\r\n\t\t\tsuper(options);\r\n\t\t}\r\n\r\n\t\tsetRequestHeader(aName, aValue) {\r\n\t\t\tthis.#data.request.headers = this.#data.request.headers || {};\r\n\t\t\tthis.#data.request.headers[aName] = aValue;\r\n\t\t}\r\n\r\n\t\topen(aMethod, aUrl, isAsync, aUsername, aPassword) {\r\n\t\t\tconst url = new URL(aUrl, GLOBAL.location.origin);\r\n\r\n\t\t\tthis.#data = {\r\n\t\t\t\turl: new URL(aUrl, location),\r\n\t\t\t\trequest: {\r\n\t\t\t\t\tmethod: aMethod,\r\n\t\t\t\t},\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tmethod: aMethod,\r\n\t\t\t\t\torigin: url.origin,\r\n\t\t\t\t\tprotocol: url.protocol,\r\n\t\t\t\t\thostname: url.hostname,\r\n\t\t\t\t\tport: url.port,\r\n\t\t\t\t\tpath: url.pathname,\r\n\t\t\t\t\tquery: url.search,\r\n\t\t\t\t\thash: url.hash,\r\n\t\t\t\t\tasync: typeof isAsync === \"boolean\" ? isAsync : true,\r\n\t\t\t\t\tusername: aUsername,\r\n\t\t\t\t\tpassword: aPassword,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsend(aBody) {\r\n\t\t\tthis.#data.request.body = aBody;\r\n\t\t\tManager.doIntercept(this.#data)\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tconst { url, request, metadata } = data;\r\n\t\t\t\t\tconst { method, headers, body } = request;\r\n\t\t\t\t\tconst { async, username, password } = metadata;\r\n\t\t\t\t\tconst target = typeof url === \"string\" ? url : url.toString();\r\n\t\t\t\t\tsuper.open(method, target, async, username, username);\r\n\r\n\t\t\t\t\tif (typeof headers !== \"undefined\") Object.getOwnPropertyNames(headers).forEach((header) => super.setRequestHeader(header, headers[header]));\r\n\t\t\t\t\tsuper.send(body);\r\n\t\t\t\t})\r\n\t\t\t\t[\"catch\"](console.error);\r\n\t\t}\r\n\t}\r\n\r\n\twindow.XMLHttpRequest = ExtXMLHttpRequest;\r\n})(window.XMLHttpRequest);\r\n","import Manager from \"./Manager\";\r\nimport {GLOBAL} from \"./Utils\";\r\nimport {ORGFETCH} from \"./Constants\";\r\n\t\r\nGLOBAL.fetch = async function(aUrl, aRequest){\r\n\tconst url = new URL(aUrl, GLOBAL.location);\r\n\tconst data = await Manager.doIntercept({\r\n\t\t\turl : new URL(aUrl, location),\r\n\t\t\trequest : aRequest || {},\r\n\t\t\tmetadata : {\r\n\t\t\t\tmethod : typeof aRequest === \"undefined\" ? \"GET\" : (aRequest.method || \"GET\"),\r\n\t\t\t\torigin: url.origin,\r\n\t\t\t\tprotocol : url.protocol,\r\n\t\t\t\thostname: url.hostname,\r\n\t\t\t\tport: url.port,\r\n\t\t\t\tpath : url.pathname,\r\n\t\t\t\thash : url.hash,\r\n\t\t\t\tquery: url.search,\r\n\t\t\t\tasync : true\r\n\t\t\t}\r\n\t\t});\r\n\t\t\t\r\n\treturn ORGFETCH(data.url, data.request);\r\n};","import { ORGFETCH } from \"./Constants.js\";\r\nimport \"./TypeDefs.js\";\r\n\r\n/**\r\n * Interface for classes that represents a request intercepter implementation.\r\n * \r\n * @interface\r\n */\r\nexport default class Interceptor {\r\n\t/**\r\n\t * @async\r\n\t * @param {InterceptorData} data \r\n\t */\r\n\tasync doAccept(data) {}\r\n\t/**\r\n\t * @async\r\n\t * @param {InterceptorData} data \r\n\t * @returns {InterceptorData | undefined }\r\n\t */\r\n\tasync doHandle(data) {}\r\n\r\n\t/**\r\n\t * @async\r\n\t * @param {(string|URL)} url\r\n\t * @param {(object|Request)} request\r\n\t * @returns {Promise<Response>}\r\n\t */\r\n\tasync unceckedFetch(url, request) {\r\n\t\treturn ORGFETCH(url, request);\r\n\t}\r\n}\r\n","/**\r\n * aSetup  =>\r\n * {\r\n * \tcondition : [string | string[] | function(aData}],\r\n * \tfetchToken : function(),\r\n *  appendToken : function(aToken, aData),\r\n *  (optional) refreshInterval,\r\n *  (optional) refreshToken : function()\r\n * }\r\n */\r\n\r\nconst defaultTokenAppender = async (token, data) => {\r\n\tdata.request.headers = data.request.headers || {};\r\n\tdata.request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n\treturn data;\r\n}\r\n\r\nimport Interceptor from \"../Interceptor\";\r\nexport default class TokenInterceptor extends Interceptor {\r\n\r\n\t#token = null;\r\n\t#lastData = {};\r\n\t#condition;\r\n\t#fetchToken;\r\n\t#appendToken;\r\n\t#refreshInterval;\r\n\t#refreshToken;\r\n\r\n\tconstructor({ condition, fetchToken, appendToken, refreshInterval = 60 * 1000, refreshToken }) {\r\n\t\tsuper();\r\n\t\tif(typeof condition !== \"string\" && !(condition instanceof Array) && typeof condition !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"condition\" must be a \"string\", \"array\" or \"function\"!`);\r\n\t\tthis.#condition = condition;\r\n\t\t\r\n\t\tif(typeof fetchToken !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"fetchToken\" must be a \"function\"!`);\r\n\t\tthis.#fetchToken = fetchToken;\r\n\r\n\t\tif(appendToken && typeof appendToken !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"appendToken\" must be a \"function\"!`);\r\n\t\tthis.#appendToken = appendToken || defaultTokenAppender;\r\n\r\n\t\tthis.#refreshInterval = refreshInterval;\r\n\t\tthis.#refreshToken = refreshToken;\r\n\t}\r\n\r\n\tasync doAccept(data) {\r\n\t\tconst type = typeof this.#condition;\r\n\t\tconst condition = this.#condition;\r\n\t\tconst origin = data.metadata.origin;\r\n\t\tif (type === \"function\") return await condition(data);\r\n\t\telse if (type === \"string\") return condition == origin;\r\n\t\telse if (condition instanceof Array)\r\n\t\t\treturn condition.includes(origin);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync doHandle(data) {\r\n\t\tif (!this.#token) {\r\n\t\t\tconst { url, metadata } = data;\r\n\t\t\tthis.#lastData = { url, metadata };\r\n\t\t\tthis.#token = this.#fetchToken({ url, metadata });\r\n\t\t\tthis.#startRefresh();\r\n\t\t}\r\n\r\n\t\treturn this.#callAppendToken(data);\r\n\t}\r\n\r\n\tasync #callAppendToken(data) {\r\n\t\tconst appender = this.#appendToken;\r\n\t\tconst token = await this.#token;\r\n\t\tconst result = await appender(token, data);\r\n\r\n\t\treturn result ? result : data;\r\n\t}\r\n\r\n\t#startRefresh() {\r\n\t\tif (this.#refreshInterval > 0) {\r\n\t\t\tconst refreshToken = this.#refreshToken || (() => this.#fetchToken(this.#lastData));\r\n\t\t\tconst timeout = async () => {\r\n\t\t\t\tif (this.#refreshToken)\r\n\t\t\t\t\tawait this.#refreshToken(this.#lastData);\r\n\t\t\t\telse\r\n\t\t\t\t\tawait this.#fetchToken(this.#lastData);\r\n\r\n\t\t\t\tsetTimeout(timeout,this.#refreshInterval );\r\n\t\t\t};\r\n\r\n\r\n\t\t\tsetTimeout(timeout , this.#refreshInterval);\r\n\t\t}\r\n\t}\r\n};","import TokenInterceptor from \"./TokenInterceptor\"\r\n\r\nconst OAuthInterceptor = function(aSetup){\r\n\tconst setup = aSetup;\r\n\tsetup.fetchToken = async () => {\r\n\t\tconst response = await fetch(setup.login.url, {\r\n\t\t\tmethod: (setup.login.method || \"get\")\r\n\t\t});\r\n\t\tresponse = await response.json();\r\n\t\treturn response[setup.login.response.valueSelector];\r\n\t};\r\n\treturn TokenInterceptor(aSetup);\r\n};\r\n\r\nexport default OAuthInterceptor;\r\n","import OAuthInterceptor from \"./OAuthInterceptor\";\r\nimport TokenInterceptor from \"./TokenInterceptor\";\r\n\r\n\r\nexport default  {\r\n\tOAuthInterceptor,\r\n\tTokenInterceptor\r\n};","import {GLOBAL} from \"./Utils\";\r\nimport \"./XMLHttpRequest\";\r\nimport \"./Fetch\";\r\nimport Manager from \"./Manager\";\r\nimport Interceptor from \"./Interceptor\";\r\nimport interceptors from \"./interceptors\";\r\n\r\nGLOBAL.defaultjs = GLOBAL.defaultjs || {};\r\nGLOBAL.defaultjs.httpinterceptor = GLOBAL.defaultjs.httpinterceptor || {\r\n\tVERSION : \"${version}\",\r\n\tManager,\r\n\tInterceptor,\r\n\tinterceptors\r\n};"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","GLOBAL","self","ORGFETCH","fetch","CURRENTORIGIN","location","origin","INSTANCE","constructor","ignoreDocumentOrigin","value","addOriginToIgnore","origins","Array","toString","addUrlToIgnore","urls","url","setup","Promise","push","addInterceptor","aInterceptor","forEach","interceptor","Error","doAccept","doHandle","reset","ready","length","interceptors","shift","doIntercept","data","metadata","chain","uncheckedFetch","request","result","setTimeout","XMLHttpRequest","options","super","setRequestHeader","aName","aValue","headers","open","aMethod","aUrl","isAsync","aUsername","aPassword","URL","method","protocol","hostname","port","path","pathname","query","search","hash","async","username","password","send","aBody","body","then","console","log","target","Object","getOwnPropertyNames","header","error","aRequest","Interceptor","unceckedFetch","defaultTokenAppender","token","TokenInterceptor","condition","fetchToken","appendToken","refreshInterval","refreshToken","type","includes","appender","timeout","OAuthInterceptor","aSetup","response","login","json","valueSelector","defaultjs","httpinterceptor","VERSION","Manager"],"sourceRoot":""}