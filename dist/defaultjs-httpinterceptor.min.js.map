{"version":3,"file":"defaultjs-httpinterceptor.min.js","mappings":"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","sources":["webpack://@default-js/defaultjs-httpinterceptor/webpack/bootstrap","webpack://@default-js/defaultjs-httpinterceptor/webpack/runtime/global","webpack://@default-js/defaultjs-httpinterceptor/./src/Utils.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Constants.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Manager.js","webpack://@default-js/defaultjs-httpinterceptor/./src/XMLHttpRequest.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Fetch.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Interceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/TokenInterceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/OAuthInterceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/index.js","webpack://@default-js/defaultjs-httpinterceptor/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const GLOBAL = (() => {\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\treturn {};\n})();\n\nexport {GLOBAL};\nconst Utils = {\n\tGLOBAL : GLOBAL\n};\n\nexport default Utils; ","import {GLOBAL} from \"./Utils\";\r\nexport const ORGFETCH = GLOBAL.fetch;","import { GLOBAL } from \"./Utils\";\r\nimport { ORGFETCH } from \"./Constants\";\r\nconst CURRENTORIGIN = GLOBAL.location.origin;\r\n\r\nclass Manager {\r\n\t#cache = {};\r\n\t#ignoredUrls = {};\r\n\t#ignoredOrigins = {};\r\n\t#ignoreDocumentOrigin = false;\r\n\t#interceptors = [];\r\n\t#setup = [];\r\n\t#readyCheck;\r\n\r\n\tconstructor() { }\r\n\r\n\tset ignoreDocumentOrigin(value) {\r\n\t\tthis.#ignoreDocumentOrigin = value;\r\n\t}\r\n\r\n\taddOriginToIgnore(origins) {\r\n\t\tif (origins instanceof Array)\r\n\t\t\tfor (let origin of origins)\r\n\t\t\t\tthis.#ignoredOrigins[origin.toString()] = true;\r\n\t\telse\r\n\t\t\tthis.#ignoredOrigins[origins.toString()] = true;\r\n\t}\r\n\r\n\taddUrlToIgnore(urls) {\r\n\t\tif (urls instanceof Array)\r\n\t\t\tfor (let url of urls)\r\n\t\t\t\tthis.#ignoredUrls[url.toString()] = true;\r\n\t\telse\r\n\t\t\tthis.#ignoredUrls[urls.toString()] = true;\r\n\t}\r\n\r\n\tsetup(setup) {\r\n\t\tif (typeof setup === \"function\" || setup instanceof Promise)\r\n\t\t\tthis.#setup.push(setup);\r\n\t}\r\n\r\n\taddInterceptor(aInterceptor) {\r\n\t\tif(aInterceptor instanceof Array)\r\n\t\t\treturn aInterceptor.forEach(interceptor => this.addInterceptor(interceptor));\r\n\t\tif (typeof aInterceptor !== \"object\")\r\n\t\t\tthrow new Error(\"function required an interceptor\");\r\n\t\tif (typeof aInterceptor.doAccept !== \"function\")\r\n\t\t\tthrow new Error(\"The interceptor required a \\\"doAccept\\\" function!\");\r\n\t\tif (typeof aInterceptor.doHandle !== \"function\")\r\n\t\t\tthrow new Error(\"The interceptor required a \\\"doHandle\\\" function!\");\r\n\r\n\t\tthis.#interceptors.push(aInterceptor);\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tget ready() {\r\n\t\treturn (async () => {\t\t\t\r\n\t\t\tif (this.#setup.length == 0)\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tif(this.#readyCheck)\r\n\t\t\t\treturn this.#readyCheck;\r\n\r\n\t\t\tthis.#readyCheck = (async () => {\r\n\t\t\t\twhile(this.#setup.length != 0){\r\n\t\t\t\t\tconst setup = this.#setup[0];\r\n\t\t\t\t\tif (setup){\r\n\t\t\t\t\t\tconst interceptors = setup instanceof Promise ? await setup : await setup();\r\n\t\t\t\t\t\tif(interceptors)\r\n\t\t\t\t\t\t\tinterceptors instanceof Array ? interceptors.forEach(interceptor => this.addInterceptor(interceptor)) : this.addInterceptor(interceptors);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.#setup.shift();\r\n\t\t\t\t}\r\n\t\t\t\tthis.#readyCheck = null;\r\n\t\t\t\treturn this.ready;\r\n\t\t\t})();\r\n\r\n\t\t\treturn this.#readyCheck;\r\n\t\t})();\r\n\t}\r\n\r\n\tasync doIntercept(aData) {\r\n\t\tawait this.ready;\r\n\r\n\t\tconst origin = aData.metadata.origin;\r\n\r\n\t\tif (this.#isIgnored(origin, aData.url.toString()))\r\n\t\t\treturn aData;\r\n\r\n\t\tconst { url, metadata } = aData;\r\n\t\tconst chain = await this.#getChain(origin, { url, metadata });\r\n\t\tif (!chain)\r\n\t\t\treturn aData;\r\n\r\n\t\tfor (let interceptor of chain)\r\n\t\t\taData = await interceptor.doHandle(aData);\r\n\r\n\t\treturn aData;\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.#cache = {};\r\n\t}\r\n\r\n\tasync uncheckedFetch(url, request) {\r\n\t\treturn ORGFETCH(url, request);\r\n\t}\r\n\r\n\t#isIgnored(origin, url) {\r\n\t\tif (this.#ignoredUrls[url])\r\n\t\t\treturn true\r\n\t\tif (this.#ignoreDocumentOrigin && origin == CURRENTORIGIN)\r\n\t\t\treturn true;\r\n\t\tif (this.#ignoredOrigins[origin])\r\n\t\t\treturn true;\r\n\r\n\t\treturn false\r\n\t}\r\n\r\n\tasync #getChain(origin, data) {\r\n\t\tlet chain = this.#cache[origin];\r\n\t\tif (!chain) {\r\n\t\t\tchain = this.#interceptorForOrigin(origin, data);\r\n\t\t\tthis.#cache[origin] = chain;\r\n\t\t}\r\n\r\n\t\treturn chain;\r\n\t}\r\n\r\n\tasync #interceptorForOrigin(origin, data) {\r\n\t\tconst result = [];\r\n\t\tfor (let interceptor of this.#interceptors) {\r\n\t\t\tif (await interceptor.doAccept(data))\r\n\t\t\t\tresult.push(interceptor)\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nconst INSTANCE = new Manager();\r\nsetTimeout(() => INSTANCE.ready, 10);\r\n\r\n\r\nexport default INSTANCE;\r\nexport {Manager};","import Manager from \"./Manager\";\r\nimport {GLOBAL} from \"./Utils\";\r\n\r\nif(typeof GLOBAL.XMLHttpRequest !== \"undefined\"){\r\n\tconst ORGXHR = GLOBAL.XMLHttpRequest;\r\n\tconst executeRequest = function(aData){\r\n\t\tORGXHR.prototype.open.call(this, aData.request.method, aData.url, aData.metadata.async, aData.metadata.username, aData.metadata.password);\r\n\t\tif(typeof aData.request.headers !== \"undefined\")\r\n\t\t\tObject.getOwnPropertyNames(aData.request.headers)\r\n\t\t\t.forEach(aHeader =>{\r\n\t\t\t\tORGXHR.prototype.setRequestHeader.call(this, aHeader, aData.request.headers[aHeader]);\r\n\t\t\t});\r\n\t\tORGXHR.prototype.send.call(this, aData.request.body);\r\n\t}\r\n\tconst XHR = function (){\r\n\t\tconst xhr = new ORGXHR(arguments);\r\n\t\tlet data = undefined;\r\n\t\t\r\n\t\txhr.setRequestHeader = function(aName, aValue){\r\n\t\t\tdata.request.headers = data.request.headers || {};\r\n\t\t\tdata.request.headers[aName] = aValue;\r\n\t\t};\r\n\t\t\r\n\t\txhr.open = function(aMethod, aUrl, isAsync, aUsername, aPassword){\r\n\t\t\tconst url = new URL(aUrl, GLOBAL.location.origin);\r\n\t\t\tdata = {\r\n\t\t\t\turl : new URL(aUrl, location),\r\n\t\t\t\trequest : {\r\n\t\t\t\t\tmethod : aMethod\r\n\t\t\t\t},\r\n\t\t\t\tmetadata : {\r\n\t\t\t\t\tmethod : aMethod,\r\n\t\t\t\t\torigin: url.origin,\r\n\t\t\t\t\tprotocol : url.protocol,\r\n\t\t\t\t\thostname: url.hostname,\r\n\t\t\t\t\tport: url.port,\r\n\t\t\t\t\tpath : url.pathname,\r\n\t\t\t\t\tquery: url.search,\r\n\t\t\t\t\thash : url.hash,\r\n\t\t\t\t\tasync : typeof isAsync === \"boolean\" ? isAsync : true,\r\n\t\t\t\t\tusername : aUsername,\r\n\t\t\t\t\tpassword : aPassword\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t};\r\n\t\t\r\n\t\txhr.send = function(aBody){\r\n\t\t\tif(data.metadata.async){\r\n\t\t\t\tdata.request.body = aBody; \r\n\t    \t\tManager.doIntercept(data)\r\n\t    \t\t.then(executeRequest.bind(xhr))\r\n\t    \t\t[\"catch\"](console.error);\r\n\t\t    }\r\n\t\t\telse\r\n\t\t\t\texecuteRequest.call(xhr, data);\r\n\t\t};\r\n\t\t\r\n\t\treturn xhr;\r\n\t};\r\n\t\r\n\tGLOBAL.XMLHttpRequest = XHR;\r\n\tGLOBAL.XMLHttpRequest.prototype = ORGXHR.prototype;\r\n\tGLOBAL.XMLHttpRequest.prototype.constructor = XHR;\r\n}","import Manager from \"./Manager\";\r\nimport {GLOBAL} from \"./Utils\";\r\nimport {ORGFETCH} from \"./Constants\";\r\n\t\r\nGLOBAL.fetch = async function(aUrl, aRequest){\r\n\tconst url = new URL(aUrl, GLOBAL.location);\r\n\tconst data = await Manager.doIntercept({\r\n\t\t\turl : new URL(aUrl, location),\r\n\t\t\trequest : aRequest || {},\r\n\t\t\tmetadata : {\r\n\t\t\t\tmethod : typeof aRequest === \"undefined\" ? \"GET\" : (aRequest.method || \"GET\"),\r\n\t\t\t\torigin: url.origin,\r\n\t\t\t\tprotocol : url.protocol,\r\n\t\t\t\thostname: url.hostname,\r\n\t\t\t\tport: url.port,\r\n\t\t\t\tpath : url.pathname,\r\n\t\t\t\thash : url.hash,\r\n\t\t\t\tquery: url.search,\r\n\t\t\t\tasync : true\r\n\t\t\t}\r\n\t\t});\r\n\t\t\t\r\n\treturn ORGFETCH(data.url, data.request);\r\n};","import {ORGFETCH} from \"./Constants\";\r\n\r\nexport default class Interceptor{\r\n    async doAccept(data){}\r\n    async doHandle(data){}\r\n    async unceckedFetch(url, request){\r\n\t\treturn ORGFETCH(url, request);\r\n\t}\r\n\r\n};","/**\r\n * aSetup  =>\r\n * {\r\n * \tcondition : [string | string[] | function(aData}],\r\n * \tfetchToken : function(),\r\n *  appendToken : function(aToken, aData),\r\n *  (optional) refreshInterval,\r\n *  (optional) refreshToken : function()\r\n * }\r\n */\r\n\r\nconst defaultTokenAppender = async (token, data) => {\r\n\tdata.request.headers = data.request.headers || {};\r\n\tdata.request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n\treturn data;\r\n}\r\n\r\nimport Interceptor from \"../Interceptor\";\r\nexport default class TokenInterceptor extends Interceptor {\r\n\r\n\t#token = null;\r\n\t#lastData = {};\r\n\t#condition;\r\n\t#fetchToken;\r\n\t#appendToken;\r\n\t#refreshInterval;\r\n\t#refreshToken;\r\n\r\n\tconstructor({ condition, fetchToken, appendToken, refreshInterval = 60 * 1000, refreshToken }) {\r\n\t\tsuper();\r\n\t\tif(typeof condition !== \"string\" && !(condition instanceof Array) && typeof condition !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"condition\" must be a \"string\", \"array\" or \"function\"!`);\r\n\t\tthis.#condition = condition;\r\n\t\t\r\n\t\tif(typeof fetchToken !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"fetchToken\" must be a \"function\"!`);\r\n\t\tthis.#fetchToken = fetchToken;\r\n\r\n\t\tif(appendToken && typeof appendToken !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"appendToken\" must be a \"function\"!`);\r\n\t\tthis.#appendToken = appendToken || defaultTokenAppender;\r\n\r\n\t\tthis.#refreshInterval = refreshInterval;\r\n\t\tthis.#refreshToken = refreshToken;\r\n\t}\r\n\r\n\tasync doAccept(data) {\r\n\t\tconst type = typeof this.#condition;\r\n\t\tconst condition = this.#condition;\r\n\t\tconst origin = data.metadata.origin;\r\n\t\tif (type === \"function\") return await condition(data);\r\n\t\telse if (type === \"string\") return condition == origin;\r\n\t\telse if (condition instanceof Array)\r\n\t\t\treturn condition.includes(origin);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync doHandle(data) {\r\n\t\tif (!this.#token) {\r\n\t\t\tconst { url, metadata } = data;\r\n\t\t\tthis.#lastData = { url, metadata };\r\n\t\t\tthis.#token = this.#fetchToken({ url, metadata });\r\n\t\t\tthis.#startRefresh();\r\n\t\t}\r\n\r\n\t\treturn this.#callAppendToken(data);\r\n\t}\r\n\r\n\tasync #callAppendToken(data) {\r\n\t\tconst appender = this.#appendToken;\r\n\t\tconst token = await this.#token;\r\n\t\tconst result = await appender(token, data);\r\n\r\n\t\treturn result ? result : data;\r\n\t}\r\n\r\n\t#startRefresh() {\r\n\t\tif (this.#refreshInterval > 0) {\r\n\t\t\tconst refreshToken = this.#refreshToken || (() => this.#fetchToken(this.#lastData));\r\n\t\t\tconst timeout = async () => {\r\n\t\t\t\tif (this.#refreshToken)\r\n\t\t\t\t\tawait this.#refreshToken(this.#lastData);\r\n\t\t\t\telse\r\n\t\t\t\t\tawait this.#fetchToken(this.#lastData);\r\n\r\n\t\t\t\tsetTimeout(timeout,this.#refreshInterval );\r\n\t\t\t};\r\n\r\n\r\n\t\t\tsetTimeout(timeout , this.#refreshInterval);\r\n\t\t}\r\n\t}\r\n};","import TokenInterceptor from \"./TokenInterceptor\"\r\n\r\nconst OAuthInterceptor = function(aSetup){\r\n\tconst setup = aSetup;\r\n\tsetup.fetchToken = async () => {\r\n\t\tconst response = await fetch(setup.login.url, {\r\n\t\t\tmethod: (setup.login.method || \"get\")\r\n\t\t});\r\n\t\tresponse = await response.json();\r\n\t\treturn response[setup.login.response.valueSelector];\r\n\t};\r\n\treturn TokenInterceptor(aSetup);\r\n};\r\n\r\nexport default OAuthInterceptor;\r\n","import OAuthInterceptor from \"./OAuthInterceptor\";\r\nimport TokenInterceptor from \"./TokenInterceptor\";\r\n\r\n\r\nexport default  {\r\n\tOAuthInterceptor,\r\n\tTokenInterceptor\r\n};","import {GLOBAL} from \"./Utils\";\r\nimport \"./XMLHttpRequest\";\r\nimport \"./Fetch\";\r\nimport Manager from \"./Manager\";\r\nimport Interceptor from \"./Interceptor\";\r\nimport interceptors from \"./interceptors\";\r\n\r\nGLOBAL.defaultjs = GLOBAL.defaultjs || {};\r\nGLOBAL.defaultjs.httpinterceptor = GLOBAL.defaultjs.httpinterceptor || {\r\n\tVERSION : \"${version}\",\r\n\tManager,\r\n\tInterceptor,\r\n\tinterceptors\r\n};"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","GLOBAL","self","ORGFETCH","fetch","CURRENTORIGIN","location","origin","INSTANCE","constructor","ignoreDocumentOrigin","value","addOriginToIgnore","origins","Array","toString","addUrlToIgnore","urls","url","setup","Promise","push","addInterceptor","aInterceptor","forEach","interceptor","Error","doAccept","doHandle","reset","ready","length","interceptors","shift","async","aData","metadata","chain","request","data","result","setTimeout","XMLHttpRequest","ORGXHR","executeRequest","prototype","open","call","method","username","password","headers","Object","getOwnPropertyNames","aHeader","setRequestHeader","send","body","XHR","xhr","arguments","aName","aValue","aMethod","aUrl","isAsync","aUsername","aPassword","URL","protocol","hostname","port","path","pathname","query","search","hash","aBody","then","bind","console","error","aRequest","Interceptor","defaultTokenAppender","token","TokenInterceptor","condition","fetchToken","appendToken","refreshInterval","refreshToken","super","type","includes","appender","timeout","OAuthInterceptor","aSetup","response","login","json","valueSelector","defaultjs","httpinterceptor","VERSION","Manager"],"sourceRoot":""}