{"version":3,"file":"defaultjs-httpinterceptor.min.js","mappings":"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","sources":["webpack://@default-js/defaultjs-httpinterceptor/webpack/bootstrap","webpack://@default-js/defaultjs-httpinterceptor/webpack/runtime/global","webpack://@default-js/defaultjs-httpinterceptor/./src/Utils.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Constants.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Interceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Manager.js","webpack://@default-js/defaultjs-httpinterceptor/./src/XMLHttpRequest.js","webpack://@default-js/defaultjs-httpinterceptor/./src/Fetch.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/TokenInterceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/OAuthInterceptor.js","webpack://@default-js/defaultjs-httpinterceptor/./src/interceptors/index.js","webpack://@default-js/defaultjs-httpinterceptor/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const GLOBAL = (() => {\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\treturn {};\n})();\n\nexport {GLOBAL};\nconst Utils = {\n\tGLOBAL : GLOBAL\n};\n\nexport default Utils; ","import {GLOBAL} from \"./Utils\";\r\nexport const ORGFETCH = GLOBAL.fetch;","import { ORGFETCH } from \"./Constants.js\";\r\nimport \"./TypeDefs.js\";\r\n\r\n/**\r\n * Interface for classes that represents a request intercepter implementation.\r\n * \r\n * @interface\r\n */\r\nexport default class Interceptor {\r\n\t/**\r\n\t * @async\r\n\t * @param {InterceptorData} data \r\n\t */\r\n\tasync doAccept(data) {}\r\n\t/**\r\n\t * @async\r\n\t * @param {InterceptorData} data \r\n\t * @returns {InterceptorData | undefined }\r\n\t */\r\n\tasync doHandle(data) {}\r\n\r\n\t/**\r\n\t * @async\r\n\t * @param {(string|URL)} url\r\n\t * @param {(object|Request)} request\r\n\t * @returns {Promise<Response>}\r\n\t */\r\n\tasync unceckedFetch(url, request) {\r\n\t\treturn ORGFETCH(url, request);\r\n\t}\r\n}\r\n","import { GLOBAL } from \"./Utils.js\";\r\nimport { ORGFETCH } from \"./Constants.js\";\r\nimport Interceptor from \"./Interceptor.js\";\r\nconst CURRENTORIGIN = GLOBAL.location.origin;\r\n\r\nclass Manager {\r\n\t#cache = new Map();\r\n\t#ignoredUrls = new Set();\r\n\t#ignoredOrigins = new Set();\r\n\t#ignoreDocumentOrigin = false;\r\n\t\r\n\t/**\r\n\t * @type {Array<Interceptor>}\r\n\t */\r\n\t#interceptors = [];\r\n\t/**\r\n\t * @type {Array<Function|Promise<Array<Interceptor>>|Promise<Interceptor>}\r\n\t */\r\n\t#setup = [];\r\n\t#readyCheck = null;\r\n\r\n\tconstructor() {}\r\n\r\n\t\r\n\t/**\r\n\t * ignores interceptors for the current document origin\r\n\t *\r\n\t * @type {boolean}\r\n\t */\r\n\tset ignoreDocumentOrigin(value) {\r\n\t\tthis.#ignoreDocumentOrigin = value;\r\n\t}\r\n\r\n\t/**\r\n\t * add origins to be ignored\r\n\t * @param {string|URL|Iterable<string>|Iterable<URL>} origins\r\n\t */\r\n\taddOriginToIgnore(origins) {\r\n\t\tif (Symbol.iterator in origins) for (let origin of origins) this.#ignoredOrigins.add(origin.toString());\r\n\t\telse this.#ignoredOrigins[origins.toString()] = true;\r\n\t}\r\n\r\n\t/**\r\n\t * add urls to be ignored\r\n\t * @param {string|URL|Iterable<string>|Iterable<URL>} urls\r\n\t */\r\n\taddUrlToIgnore(urls) {\r\n\t\tif (Symbol.iterator in urls) for (let url of urls) this.#ignoredUrls.add(url.toString());\r\n\t\telse this.#ignoredUrls.add(urls.toString());\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {Function|Promise<Iterable<Interceptor>>|Promise<Interceptor>} aSetup\r\n\t */\r\n\tsetup(aSetup) {\r\n\t\tif (typeof aSetup === \"function\" || aSetup instanceof Promise) \r\n\t\t\tthis.#setup.push(aSetup);\r\n\t}\r\n\r\n\t/**\r\n\t * \r\n\t * @param {Interceptor|Iterable<Interceptor>|object} aInterceptor \r\n\t * @returns \r\n\t */\r\n\taddInterceptor(aInterceptor) {\r\n\t\tif (Symbol.iterator in aInterceptor)\r\n\t\t\tfor (interceptor of aInterceptor)\r\n\t\t\t\tthis.addInterceptor(interceptor);\r\n\t\tif (typeof aInterceptor !== \"object\") throw new Error(\"function required an interceptor\");\r\n\t\tif (typeof aInterceptor.doAccept !== \"function\") throw new Error('The interceptor required a \"doAccept\" function!');\r\n\t\tif (typeof aInterceptor.doHandle !== \"function\") throw new Error('The interceptor required a \"doHandle\" function!');\r\n\r\n\t\tthis.#interceptors.push(aInterceptor);\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\t/**\r\n\t * @readonly\r\n\t * @type {Promise<>}\r\n\t */\r\n\tget ready() {\r\n\t\treturn (() => {\r\n\t\t\tif (this.#setup.length == 0) return true;\r\n\r\n\t\t\tif (this.#readyCheck) return this.#readyCheck;\r\n\r\n\t\t\tthis.#readyCheck = (async () => {\r\n\t\t\t\twhile (this.#setup.length != 0) {\r\n\t\t\t\t\tconst setup = this.#setup.shift();\r\n\t\t\t\t\tconst interceptors = await (setup instanceof Promise ? setup : setup());\r\n\t\t\t\t\tif (interceptors)\r\n\t\t\t\t\t\tif (Symbol.iterator in interceptors)\r\n\t\t\t\t\t\t\tfor (interceptor of interceptors)\r\n\t\t\t\t\t\t\t\tthis.addInterceptor(interceptor);\r\n\t\t\t\t\t\telse if (interceptors instanceof Interceptor) \r\n\t\t\t\t\t\t\tthis.addInterceptor(interceptors);\r\n\t\t\t\t\t\telse \r\n\t\t\t\t\t\t\tthis.addInterceptor(interceptors);\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tthis.#readyCheck = null;\r\n\t\t\t\treturn this.ready;\r\n\t\t\t})();\r\n\r\n\t\t\treturn this.#readyCheck;\r\n\t\t})();\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param {object} data\r\n\t * @param {(string|URL)} data.url\r\n\t * @param {(object|Request)} data.request\r\n\t * @param {object} data.metadata\r\n\t * @param {string} data.metadata.method\r\n\t * @param {string} data.metadata.origin\r\n\t * @param {string} data.metadata.protocol\r\n\t * @param {string} data.metadata.hostname\r\n\t * @param {number} data.metadata.port\r\n\t * @param {string} data.metadata.path\r\n\t * @param {string} data.metadata.hash\r\n\t * @param {URLSearchParams} data.metadata.query\r\n\t * @param {boolean} data.metadata.async\r\n\t * @returns {object} the manipulated data\r\n\t */\r\n\tasync doIntercept(data) {\r\n\t\tawait this.ready;\r\n\r\n\t\tconst {\turl, metadata } = data;\r\n\t\tconst { origin } = metadata;\r\n\t\tif (this.#isIgnored(origin, data.url.toString())) return data;\r\n\r\n\t\tconst chain = await this.#getChain(origin, { url, metadata });\r\n\t\tif (!chain) return data;\r\n\r\n\t\tfor (let interceptor of chain) data = (await interceptor.doHandle(data)) || data;\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\treset() {\r\n\t\tthis.#cache = new Map();\r\n\t}\r\n\r\n\t/**\r\n\t * make a classic fetch call without interception\r\n\t * \r\n\t * @param {string|URL} url \r\n\t * @param {object|Request} request \r\n\t * @returns {Promise<Response>}\r\n\t */\r\n\tasync uncheckedFetch(url, request) {\r\n\t\treturn ORGFETCH(url, request);\r\n\t}\r\n\r\n\t#isIgnored(origin, url) {\r\n\t\tif (this.#ignoredUrls.has(url)) return true;\r\n\t\tif (this.#ignoreDocumentOrigin && origin == CURRENTORIGIN) return true;\r\n\t\tif (this.#ignoredOrigins[origin]) return true;\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync #getChain(origin, data) {\r\n\t\tlet chain = this.#cache.get(origin);\r\n\t\tif (!chain) {\r\n\t\t\tchain = this.#interceptorForOrigin(data);\r\n\t\t\tthis.#cache.set(origin, chain);\r\n\t\t}\r\n\r\n\t\treturn chain;\r\n\t}\r\n\r\n\tasync #interceptorForOrigin(data) {\r\n\t\tconst result = [];\r\n\t\tfor (let interceptor of this.#interceptors) {\r\n\t\t\tif (await interceptor.doAccept(data)) result.push(interceptor);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}\r\n\r\nconst INSTANCE = new Manager();\r\nsetTimeout(() => INSTANCE.ready, 100);\r\n\r\nexport default INSTANCE;\r\nexport { Manager };\r\n","import Manager from \"./Manager\";\r\nimport { GLOBAL } from \"./Utils\";\r\nimport \"./TypeDefs.js\";\r\n\r\n((XMLHttpRequest) => {\r\n\tclass ExtXMLHttpRequest extends XMLHttpRequest {\r\n\t\t/**\r\n\t\t * @type {InterceptorData}\r\n\t\t */\r\n\t\t#data;\r\n\r\n\t\tconstructor(options) {\r\n\t\t\tsuper(options);\r\n\t\t}\r\n\r\n\t\tsetRequestHeader(aName, aValue) {\r\n\t\t\tthis.#data.request.headers = this.#data.request.headers || {};\r\n\t\t\tthis.#data.request.headers[aName] = aValue;\r\n\t\t}\r\n\r\n\t\topen(aMethod, aUrl, isAsync, aUsername, aPassword) {\r\n\t\t\tconst url = aUrl instanceof URL ? aUrl : new URL(aUrl, GLOBAL.location);\r\n\r\n\t\t\tthis.#data = {\r\n\t\t\t\turl,\r\n\t\t\t\trequest: {\r\n\t\t\t\t\tmethod: aMethod,\r\n\t\t\t\t},\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tmethod: aMethod,\r\n\t\t\t\t\torigin: url.origin,\r\n\t\t\t\t\tprotocol: url.protocol,\r\n\t\t\t\t\thostname: url.hostname,\r\n\t\t\t\t\tport: url.port,\r\n\t\t\t\t\tpath: url.pathname,\r\n\t\t\t\t\tquery: url.search,\r\n\t\t\t\t\thash: url.hash,\r\n\t\t\t\t\tasync: typeof isAsync === \"boolean\" ? isAsync : true,\r\n\t\t\t\t\tusername: aUsername,\r\n\t\t\t\t\tpassword: aPassword,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tsend(aBody) {\r\n\t\t\tthis.#data.request.body = aBody;\r\n\t\t\tManager.doIntercept(this.#data)\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tconsole.log(data);\r\n\t\t\t\t\tconst { url, request, metadata } = data;\r\n\t\t\t\t\tconst { method, headers, body } = request;\r\n\t\t\t\t\tconst { async, username, password } = metadata;\r\n\t\t\t\t\tconst target = typeof url === \"string\" ? url : url.toString();\r\n\t\t\t\t\tsuper.open(method, target, async, username, password);\r\n\r\n\t\t\t\t\tif (typeof headers !== \"undefined\") Object.getOwnPropertyNames(headers).forEach((header) => super.setRequestHeader(header, headers[header]));\r\n\t\t\t\t\tsuper.send(body);\r\n\t\t\t\t})\r\n\t\t\t\t[\"catch\"](console.error);\r\n\t\t}\r\n\t}\r\n\r\n\tGLOBAL.XMLHttpRequest = ExtXMLHttpRequest;\r\n})(GLOBAL.XMLHttpRequest);\r\n","import Manager from \"./Manager\";\r\nimport {GLOBAL} from \"./Utils\";\r\nimport {ORGFETCH} from \"./Constants\";\r\n\t\r\nGLOBAL.fetch = async function(aUrl, aRequest){\r\n\tconst url = aUrl instanceof URL ? aUrl : new URL(aUrl, GLOBAL.location);\r\n\tconst data = await Manager.doIntercept({\r\n\t\t\turl,\r\n\t\t\trequest : aRequest || {},\r\n\t\t\tmetadata : {\r\n\t\t\t\tmethod : typeof aRequest === \"undefined\" ? \"GET\" : (aRequest.method || \"GET\"),\r\n\t\t\t\torigin: url.origin,\r\n\t\t\t\tprotocol : url.protocol,\r\n\t\t\t\thostname: url.hostname,\r\n\t\t\t\tport: url.port,\r\n\t\t\t\tpath : url.pathname,\r\n\t\t\t\thash : url.hash,\r\n\t\t\t\tquery: url.search,\r\n\t\t\t\tasync : true\r\n\t\t\t}\r\n\t\t});\r\n\t\t\t\r\n\treturn ORGFETCH(data.url, data.request);\r\n};","/**\r\n * aSetup  =>\r\n * {\r\n * \tcondition : [string | string[] | function(aData}],\r\n * \tfetchToken : function(),\r\n *  appendToken : function(aToken, aData),\r\n *  (optional) refreshInterval,\r\n *  (optional) refreshToken : function()\r\n * }\r\n */\r\n\r\nconst defaultTokenAppender = async (token, data) => {\r\n\tdata.request.headers = data.request.headers || {};\r\n\tdata.request.headers[\"Authorization\"] = `Bearer ${token}`;\r\n\treturn data;\r\n}\r\n\r\nimport Interceptor from \"../Interceptor\";\r\nexport default class TokenInterceptor extends Interceptor {\r\n\r\n\t#token = null;\r\n\t#lastData = {};\r\n\t#condition;\r\n\t#fetchToken;\r\n\t#appendToken;\r\n\t#refreshInterval;\r\n\t#refreshToken;\r\n\r\n\tconstructor({ condition, fetchToken, appendToken, refreshInterval = 60 * 1000, refreshToken }) {\r\n\t\tsuper();\r\n\t\tif(typeof condition !== \"string\" && !(condition instanceof Array) && typeof condition !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"condition\" must be a \"string\", \"array\" or \"function\"!`);\r\n\t\tthis.#condition = condition;\r\n\t\t\r\n\t\tif(typeof fetchToken !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"fetchToken\" must be a \"function\"!`);\r\n\t\tthis.#fetchToken = fetchToken;\r\n\r\n\t\tif(appendToken && typeof appendToken !== \"function\")\r\n\t\t\tthrow new Error(`Parameter \"appendToken\" must be a \"function\"!`);\r\n\t\tthis.#appendToken = appendToken || defaultTokenAppender;\r\n\r\n\t\tthis.#refreshInterval = refreshInterval;\r\n\t\tthis.#refreshToken = refreshToken;\r\n\t}\r\n\r\n\tasync doAccept(data) {\r\n\t\tconst type = typeof this.#condition;\r\n\t\tconst condition = this.#condition;\r\n\t\tconst origin = data.metadata.origin;\r\n\t\tif (type === \"function\") return await condition(data);\r\n\t\telse if (type === \"string\") return condition == origin;\r\n\t\telse if (condition instanceof Array)\r\n\t\t\treturn condition.includes(origin);\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\tasync doHandle(data) {\r\n\t\tif (!this.#token) {\r\n\t\t\tconst { url, metadata } = data;\r\n\t\t\tthis.#lastData = { url, metadata };\r\n\t\t\tthis.#token = this.#fetchToken({ url, metadata });\r\n\t\t\tthis.#startRefresh();\r\n\t\t}\r\n\r\n\t\treturn this.#callAppendToken(data);\r\n\t}\r\n\r\n\tasync #callAppendToken(data) {\r\n\t\tconst appender = this.#appendToken;\r\n\t\tconst token = await this.#token;\r\n\t\tconst result = await appender(token, data);\r\n\r\n\t\treturn result ? result : data;\r\n\t}\r\n\r\n\t#startRefresh() {\r\n\t\tif (this.#refreshInterval > 0) {\r\n\t\t\tconst refreshToken = this.#refreshToken || (() => this.#fetchToken(this.#lastData));\r\n\t\t\tconst timeout = async () => {\r\n\t\t\t\tif (this.#refreshToken)\r\n\t\t\t\t\tawait this.#refreshToken(this.#lastData);\r\n\t\t\t\telse\r\n\t\t\t\t\tawait this.#fetchToken(this.#lastData);\r\n\r\n\t\t\t\tsetTimeout(timeout,this.#refreshInterval );\r\n\t\t\t};\r\n\r\n\r\n\t\t\tsetTimeout(timeout , this.#refreshInterval);\r\n\t\t}\r\n\t}\r\n};","import TokenInterceptor from \"./TokenInterceptor\"\r\n\r\nconst OAuthInterceptor = function(aSetup){\r\n\tconst setup = aSetup;\r\n\tsetup.fetchToken = async () => {\r\n\t\tconst response = await fetch(setup.login.url, {\r\n\t\t\tmethod: (setup.login.method || \"get\")\r\n\t\t});\r\n\t\tresponse = await response.json();\r\n\t\treturn response[setup.login.response.valueSelector];\r\n\t};\r\n\treturn TokenInterceptor(aSetup);\r\n};\r\n\r\nexport default OAuthInterceptor;\r\n","import OAuthInterceptor from \"./OAuthInterceptor\";\r\nimport TokenInterceptor from \"./TokenInterceptor\";\r\n\r\n\r\nexport default  {\r\n\tOAuthInterceptor,\r\n\tTokenInterceptor\r\n};","import {GLOBAL} from \"./Utils\";\r\nimport \"./XMLHttpRequest\";\r\nimport \"./Fetch\";\r\nimport Manager from \"./Manager\";\r\nimport Interceptor from \"./Interceptor\";\r\nimport interceptors from \"./interceptors\";\r\n\r\nGLOBAL.defaultjs = GLOBAL.defaultjs || {};\r\nGLOBAL.defaultjs.httpinterceptor = GLOBAL.defaultjs.httpinterceptor || {\r\n\tVERSION : \"${version}\",\r\n\tManager,\r\n\tInterceptor,\r\n\tinterceptors\r\n};"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","GLOBAL","self","ORGFETCH","fetch","Interceptor","doAccept","data","doHandle","unceckedFetch","url","request","CURRENTORIGIN","location","origin","INSTANCE","Map","Set","constructor","ignoreDocumentOrigin","value","addOriginToIgnore","origins","Symbol","iterator","add","toString","addUrlToIgnore","urls","setup","aSetup","Promise","push","addInterceptor","aInterceptor","interceptor","Error","reset","ready","length","shift","interceptors","doIntercept","metadata","chain","uncheckedFetch","has","get","set","result","setTimeout","XMLHttpRequest","options","super","setRequestHeader","aName","aValue","headers","open","aMethod","aUrl","isAsync","aUsername","aPassword","URL","method","protocol","hostname","port","path","pathname","query","search","hash","async","username","password","send","aBody","body","then","console","log","target","Object","getOwnPropertyNames","forEach","header","error","aRequest","defaultTokenAppender","token","TokenInterceptor","condition","fetchToken","appendToken","refreshInterval","refreshToken","Array","type","includes","appender","timeout","OAuthInterceptor","response","login","json","valueSelector","defaultjs","httpinterceptor","VERSION","Manager"],"sourceRoot":""}